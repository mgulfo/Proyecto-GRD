README TESTS

# ğŸ§ª Tests - Proyecto Smart Grid

Esta carpeta contiene pruebas automatizadas para asegurar que los mÃ³dulos de limpieza y procesamiento de datos funcionen correctamente.

---

## âœ… Â¿CÃ³mo ejecutar los tests?

### OpciÃ³n 1: Desde terminal con `pytest`

1. AbrÃ­ la terminal integrada de VS Code (o desde consola)
2. Desde la raÃ­z del proyecto, ejecutÃ¡:

```bash
pytest tests/ -v
```

Esto mostrarÃ¡ el resultado detallado de cada test:

```
tests/test_data_cleaning.py::test_preprocess_removes_nulls PASSED
tests/test_data_cleaning.py::test_preprocess_removes_all_nulls PASSED
```

> Asegurate de tener `pytest` instalado:
> 
> ```bash
> pip install pytest
> ```

---

### OpciÃ³n 2: Ejecutar desde VS Code con el botÃ³n

1. AbrÃ­ el archivo `test_data_cleaning.py`
2. Al lado de cada funciÃ³n, deberÃ­as ver:

```
â–¶ Run Test | Debug Test
```

3. TambiÃ©n podÃ©s abrir la pestaÃ±a **"Testing"** en el panel izquierdo y ejecutar todos los tests desde ahÃ­.

---

## ğŸ›  ConfiguraciÃ³n recomendada (si no ves los tests en VS Code)

1. `Ctrl + Shift + P` â†’ "Python: Configure Tests"
2. SeleccionÃ¡:
   - Framework: `pytest`
   - Carpeta de tests: `tests/`
3. GuardÃ¡ y reiniciÃ¡ VS Code si es necesario

---

## ğŸ“¦ Archivos actuales

- `test_data_cleaning.py`: pruebas para la funciÃ³n `preprocess_data()`

---

## ğŸ§  Â¿Por quÃ© usar tests?

- Detectan errores automÃ¡ticamente al modificar el cÃ³digo
- Aseguran que la limpieza de datos funcione como se espera
- Son una buena prÃ¡ctica profesional y facilitan el mantenimiento del proyecto
